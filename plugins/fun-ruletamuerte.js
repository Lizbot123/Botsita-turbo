import { delay } from '@whiskeysockets/baileys';

// Extraer propietarios desde global.owner
const propietarios = global.owner
  .flat()
  .filter(i => typeof i === 'string')
  .map(i => i.replace(/\D/g, '') + '@c.us');

const salasRuleta = {};

const handler = async (m, { conn }) => {
  const chatId = m.chat;
  const senderId = m.sender;

  if (salasRuleta[chatId]) 
    return conn.reply(m.chat, '‚ò†Ô∏è Ya hay una sala activa en este grupo. El ritual debe completarse antes de invocar otro.', m);

  salasRuleta[chatId] = { jugadores: [senderId], estado: 'esperando' };

  await conn.sendMessage(m.chat, { 
    text: `‚ò†Ô∏è *Ruleta Infernal* ‚ò†Ô∏è\n\n@${senderId.split('@')[0]} ha invocado el juego prohibido.\nü©∏ Responde con *acepto* si tienes el valor de enfrentar al destino.\nTiempo restante: 60 segundos...`, 
    mentions: [senderId] 
  }, { quoted: m });

  await delay(60000);
  if (salasRuleta[chatId] && salasRuleta[chatId].estado === 'esperando') {
    delete salasRuleta[chatId];
    await conn.sendMessage(m.chat, { text: '‚ò†Ô∏è Nadie acept√≥ el pacto. El c√≠rculo se disuelve en silencio...' });
  }
};

handler.command = ['ruletamuerte'];
handler.botAdmin = true;

handler.before = async (m, { conn }) => {
  const chatId = m.chat;
  const senderId = m.sender;
  const texto = m.text?.toLowerCase();

  if (!salasRuleta[chatId]) return;

  if (texto === 'acepto' || texto === 'aceptar') {
    if (salasRuleta[chatId].jugadores.length >= 2) 
      return conn.reply(m.chat, '‚ò†Ô∏è El c√≠rculo ya est√° completo. No se admiten m√°s almas.', m);

    if (senderId === salasRuleta[chatId].jugadores[0])
      return conn.reply(m.chat, '‚ò†Ô∏è No puedes aceptar tu propio pacto.', m);

    salasRuleta[chatId].jugadores.push(senderId);
    salasRuleta[chatId].estado = 'completa';

    await conn.sendMessage(m.chat, { 
      audio: { url: "https://qu.ax/iwAmy.mp3" }, 
      mimetype: "audio/mp4", 
      ptt: true 
    });

    await conn.sendMessage(m.chat, { 
      text: '‚ò†Ô∏è *Ruleta Infernal* ‚ò†Ô∏è\n\nü©∏ ¬°Dos almas han sido selladas!\nüîÆ Invocando el juicio del abismo...' 
    });

    const loadingMessages = [
      "„Ää ‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí„Äã10%\n- Los esp√≠ritus comienzan a murmurar...",
      "„Ää ‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí‚ñí„Äã30%\n- El c√≠rculo se enciende con fuego oscuro...",
      "„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí‚ñí‚ñí‚ñí„Äã50%\n- El sacrificio est√° cerca...",
      "„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñí‚ñí„Äã80%\n- El abismo elige a su v√≠ctima...",
      "„Ää ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà„Äã100%\n- El veredicto ha sido sellado con sangre."
    ];

    let { key } = await conn.sendMessage(m.chat, { text: "‚ò†Ô∏è Invocando el destino oscuro..." }, { quoted: m });

    for (let msg of loadingMessages) {
      await delay(3000);
      await conn.sendMessage(m.chat, { text: msg, edit: key }, { quoted: m });
    }

    const [jugador1, jugador2] = salasRuleta[chatId].jugadores;
    let perdedor = Math.random() < 0.5 ? jugador1 : jugador2;

    if (propietarios.includes(perdedor)) {
      await conn.sendMessage(m.chat, {
        text: '‚ö° El abismo intent√≥ devorar al creador‚Ä¶ pero su esencia es eterna.',
        mentions: [perdedor]
      });
      perdedor = perdedor === jugador1 ? jugador2 : jugador1;
    }

    await conn.sendMessage(m.chat, { 
      text: `‚ò†Ô∏è *Veredicto Infernal* ‚ò†Ô∏è\n\n@${perdedor.split('@')[0]} ha sido marcado por el abismo.\nü©∏ Tiene 60 segundos para sus √∫ltimas palabras...`, 
      mentions: [perdedor] 
    });

    await delay(60000);        
    await conn.groupParticipantsUpdate(m.chat, [perdedor], 'remove');
    await conn.sendMessage(m.chat, { 
      text: `ü©∏ @${perdedor.split('@')[0]} ha sido devorado por las sombras.\n‚ò†Ô∏è El juego ha terminado.`, 
      mentions: [perdedor] 
    });        
    delete salasRuleta[chatId];
  }

  if (texto === 'rechazar' && senderId === salasRuleta[chatId].jugadores[0]) {
    delete salasRuleta[chatId];
    await conn.sendMessage(m.chat, { text: '‚ò†Ô∏è El retador ha roto el pacto. El juego ha sido cancelado.' });
  }
};

export default handler;